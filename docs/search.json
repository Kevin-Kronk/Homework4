[
  {
    "objectID": "pages/combining.html",
    "href": "pages/combining.html",
    "title": "Combining Excel and Delimited Data",
    "section": "",
    "text": "Answers go here!",
    "crumbs": [
      "Home",
      "Combining Excel and Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html",
    "href": "pages/concepts.html",
    "title": "Conceptual Questions",
    "section": "",
    "text": "If your working directory is myfolder/homework/ , what relative path would you specify to get the file located at myfolder/MyData.csv?\n\nWe would use ../MyData.csv\n\nWhat are the major benefits of using R projects?\n\nR projects allow for a separate environment and directory for all of the code and files that pertain to one particular analysis. This keeps your files organized and separated. Additionally, the project can be connected through git to a GitHub repo, so that the files can not only be saved on your local machine, but also in remote storage. The folder that houses the project also gets set as the working directory, so if the project is shared with someone else the relative file paths will still work.\n\nWhat is git and what is github?\n\nGit is a version control software that allows you to take “snapshots” of your work, so that it is saved on your local machine and the history of those changes can be seen and accessed. If something happens you can also revert back to a previous commit. It makes it easier to work on a project with others where you can both work on separate branches and then pull and merge each others changes. GitHub is a hosting service that allows us to store code and files remotely. Git can be used to push changes from your local machine to the remote repo, or to pull from the remote repo. This is important because now multiple people using different machines can work on the same project and have a safe place to store the project as they collaborate and make changes.\n\nWhat are the two main differences between a tibble and a data.frame?\n\nA tibble gives a fancy version of the printed output that looks better, gives some metadata like column data types and number of rows, and doesn’t clog up the work space. Additionally, almost all tidyverse functions are built to work on a tibble, with them having similar syntax too. Tibbles don’t coerce down to a vector when you subset one column using [.\n\nRewrite the following nested function call using BaseR’s chaining operator:\n\nas_tibble(iris) |&gt;\nselect(starts_with(“Petal”), Species) |&gt;\nfilter(Petal.Length &lt; 1.55) |&gt;\narrange(Species)",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Homework 4",
    "section": "",
    "text": "An example pages site with multiple pages and a table of contents.\nThis could be a landing page for the site. Feel free to put whatever here!",
    "crumbs": [
      "Home",
      "Homework 4"
    ]
  },
  {
    "objectID": "pages/read_delimited.html",
    "href": "pages/read_delimited.html",
    "title": "Reading Delimited Data",
    "section": "",
    "text": "Answers go here!",
    "crumbs": [
      "Home",
      "Reading Delimited Data"
    ]
  },
  {
    "objectID": "pages/concepts.html#task-1-conceptual-questions",
    "href": "pages/concepts.html#task-1-conceptual-questions",
    "title": "Conceptual Questions",
    "section": "",
    "text": "If your working directory is myfolder/homework/ , what relative path would you specify to get the file located at myfolder/MyData.csv?\n\nWe would use ../MyData.csv\n\nWhat are the major benefits of using R projects?\n\nR projects allow for a separate environment and directory for all of the code and files that pertain to one particular analysis. This keeps your files organized and separated. Additionally, the project can be connected through git to a GitHub repo, so that the files can not only be saved on your local machine, but also in remote storage. The folder that houses the project also gets set as the working directory, so if the project is shared with someone else the relative file paths will still work.\n\nWhat is git and what is github?\n\nGit is a version control software that allows you to take “snapshots” of your work, so that it is saved on your local machine and the history of those changes can be seen and accessed. If something happens you can also revert back to a previous commit. It makes it easier to work on a project with others where you can both work on separate branches and then pull and merge each others changes. GitHub is a hosting service that allows us to store code and files remotely. Git can be used to push changes from your local machine to the remote repo, or to pull from the remote repo. This is important because now multiple people using different machines can work on the same project and have a safe place to store the project as they collaborate and make changes.\n\nWhat are the two main differences between a tibble and a data.frame?\n\nA tibble gives a fancy version of the printed output that looks better, gives some metadata like column data types and number of rows, and doesn’t clog up the work space. Additionally, almost all tidyverse functions are built to work on a tibble, with them having similar syntax too. Tibbles don’t coerce down to a vector when you subset one column using [.\n\nRewrite the following nested function call using BaseR’s chaining operator:\n\nas_tibble(iris) |&gt;\nselect(starts_with(“Petal”), Species) |&gt;\nfilter(Petal.Length &lt; 1.55) |&gt;\narrange(Species)",
    "crumbs": [
      "Home",
      "Conceptual Questions"
    ]
  }
]